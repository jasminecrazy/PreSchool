package com.demo.entity;
// Generated May 22, 2017 2:35:49 PM by Hibernate Tools 5.1.0.Alpha1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.Proxy;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Student generated by hbm2java
 */
@Entity
@Proxy(lazy =false)
@Table(name = "student", catalog = "preschool", uniqueConstraints = @UniqueConstraint(columnNames = "student_id"))
public class Student implements java.io.Serializable {

	private Integer id;
	private Class1 class1;
	private String studentId;
	private String studentName;
	private Date birthday;
	private byte gender;
	private String result;
	private String tenphuhuynh;
	private String address;
	private int phone;
	private Set<Hososk> hososks = new HashSet<Hososk>(0);
	private Set<Diemdanh> diemdanhs = new HashSet<Diemdanh>(0);
	private Set<Thuchi> thuchis = new HashSet<Thuchi>(0);

	public Student() {
	}

	public Student(Class1 class1, String studentId, String studentName, Date birthday, byte gender, String result,
			String tenphuhuynh, String address, int phone) {
		this.class1 = class1;
		this.studentId = studentId;
		this.studentName = studentName;
		this.birthday = birthday;
		this.gender = gender;
		this.result = result;
		this.tenphuhuynh = tenphuhuynh;
		this.address = address;
		this.phone = phone;
	}

	public Student(Class1 class1, String studentId, String studentName, Date birthday, byte gender, String result,
			String tenphuhuynh, String address, int phone, Set<Hososk> hososks, Set<Diemdanh> diemdanhs,
			Set<Thuchi> thuchis) {
		this.class1 = class1;
		this.studentId = studentId;
		this.studentName = studentName;
		this.birthday = birthday;
		this.gender = gender;
		this.result = result;
		this.tenphuhuynh = tenphuhuynh;
		this.address = address;
		this.phone = phone;
		this.hososks = hososks;
		this.diemdanhs = diemdanhs;
		this.thuchis = thuchis;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}
	@JsonIgnore
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "class_id", nullable = false)
	public Class1 getClass1() {
		return this.class1;
	}

	public void setClass1(Class1 class1) {
		this.class1 = class1;
	}

	@Column(name = "student_id", unique = true, nullable = false, length = 50)
	public String getStudentId() {
		return this.studentId;
	}

	public void setStudentId(String studentId) {
		this.studentId = studentId;
	}

	@Column(name = "student_name", nullable = false, length = 100)
	public String getStudentName() {
		return this.studentName;
	}

	public void setStudentName(String studentName) {
		this.studentName = studentName;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "birthday", nullable = false, length = 10)
	public Date getBirthday() {
		return this.birthday;
	}

	public void setBirthday(Date birthday) {
		this.birthday = birthday;
	}

	@Column(name = "gender", nullable = false)
	public byte getGender() {
		return this.gender;
	}

	public void setGender(byte gender) {
		this.gender = gender;
	}

	@Column(name = "result", nullable = false, length = 100)
	public String getResult() {
		return this.result;
	}

	public void setResult(String result) {
		this.result = result;
	}

	@Column(name = "tenphuhuynh", nullable = false, length = 50)
	public String getTenphuhuynh() {
		return this.tenphuhuynh;
	}

	public void setTenphuhuynh(String tenphuhuynh) {
		this.tenphuhuynh = tenphuhuynh;
	}

	@Column(name = "address", nullable = false, length = 100)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "phone", nullable = false)
	public int getPhone() {
		return this.phone;
	}

	public void setPhone(int phone) {
		this.phone = phone;
	}
@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "student")
	public Set<Hososk> getHososks() {
		return this.hososks;
	}

	public void setHososks(Set<Hososk> hososks) {
		this.hososks = hososks;
	}
	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "student")
	public Set<Diemdanh> getDiemdanhs() {
		return this.diemdanhs;
	}

	public void setDiemdanhs(Set<Diemdanh> diemdanhs) {
		this.diemdanhs = diemdanhs;
	}
	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "student")
	public Set<Thuchi> getThuchis() {
		return this.thuchis;
	}

	public void setThuchis(Set<Thuchi> thuchis) {
		this.thuchis = thuchis;
	}

}
